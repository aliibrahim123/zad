var Tr=Object.defineProperty;var t=(r,e)=>Tr(r,"name",{value:e,configurable:!0});var p=t((r,e)=>e?r?.constructor===e:i=>r?.constructor===i,"isOfType"),c=t((r,e)=>e?r instanceof e:i=>r instanceof i,"isInstanceOf"),y=t(r=>typeof r=="string","isStringP"),x=t(r=>r?.constructor===String,"isString"),l=t(r=>typeof r=="number","isNumberP"),u=t(r=>r?.constructor===Number,"isNumber"),m=t(r=>typeof r=="boolean","isBooleanP"),g=t(r=>r?.constructor===Boolean,"isBoolean"),h=t(r=>typeof r=="bigint","isBigIntP"),d=t(r=>r?.constructor===BigInt,"isBigInt"),b=t(r=>typeof r=="symbol","isSymbol"),v=t(r=>r===null||typeof r!="object"&&typeof r!="function","isPrimitive"),A=t(r=>r===null,"isNull"),N=t(r=>r===void 0,"isUndefined"),S=t(r=>r==null,"isNill"),O=t(r=>r!==void 0,"isDefined"),I=t(r=>!!r,"isTruthy"),k=t(r=>!r,"isFalsy"),E=t(r=>r===!0,"isTrue"),w=t(r=>r===!1,"isFalse"),B=t(r=>typeof r=="object"||r!==null,"isObject"),P=t(r=>r?.constructor===Object,"isPlainObject"),j=Array.isArray,T=t(r=>typeof r?.length=="number"||typeof r?.size=="number","isArrayLike"),W=t(r=>{var e=typeof r?.length=="number"?r?.length:r?.size;return Number.isInteger(e)&&e>=0&&e<=Number.MAX_SAFE_INTEGER},"isSafeArrayLike"),F=t(r=>r instanceof ArrayBuffer,"isArrayBuffer"),L=t(r=>r instanceof DataView,"isDataView"),R=t(r=>r instanceof Blob,"isBlob"),D=t(r=>r instanceof Date,"isDate"),U=t(r=>r instanceof RegExp,"isRegExp"),s=Number.isInteger,M=Number.isNaN,z=Number.isFinite,C=Number.isSafeInteger,V=t(r=>typeof r=="function","isFunction"),$=t(r=>r instanceof Promise,"isPromise"),_=t(r=>!!r?.prototype,"isConstructor"),G=t(r=>r instanceof Error,"isError"),X=t(r=>r instanceof Map,"isMap"),q=t(r=>r instanceof Set,"isSet"),H=t(r=>r instanceof WeakMap,"isWeakMap"),J=t(r=>r instanceof WeakSet,"isWeakSet"),K=t(r=>r?.length===0||r?.size===0||typeof r=="object"&&Object.keys(r).length===0,"isEmpty"),Q=t(r=>s(r)&&r>=-128&&r<=127,"isInt8"),Y=t(r=>s(r)&&r>=-32768&&r<=32767,"isInt16"),Z=t(r=>s(r)&&r>=-2147483648&&r<=2147483647,"isInt32"),rr=t(r=>s(r)&&r>=0&&r<=255,"isUint8"),er=t(r=>s(r)&&r>=0&&r<=65535,"isUint16"),tr=t(r=>s(r)&&r>=0&&r<=4294967295,"isUint32"),Wr=Function.prototype.toString,ir=t(r=>typeof r=="function"&&Wr.call(r).includes("[native code]"),"isNative");var o=t((r,e)=>{if(e===void 0)return i=>o(i,r);if(typeof e=="function")return e(r);if(Array.isArray(e))return Array.isArray(r)&&e.every((i,n)=>o(i,r[n]));if(typeof e=="object"&&e!==null){if(e instanceof RegExp)return typeof r=="string"&&e.test(r);if(typeof r!="object"||r===null)return!1;if(e instanceof Date)return r instanceof Date&&Number(r)===Number(e);for(let i in e)if(!o(e[i],r[i]))return!1;return!0}return Object.is(e,r)},"check"),f=t((r,e,i)=>{if(!Array.isArray(e))throw new TypeError(`match: predicates of type (${e?.constructor?.name}), expected (Array)`);for(let n=0;n<e.length;n++){let a=e[n];if(!Array.isArray(a))throw new TypeError(`match: predicate at index (${n}) of type (${a?.constructor?.name}), expected (Array)`);if(o(r,a[0]))return typeof a[1]=="function"?a[1](r):a[1]}return typeof i=="function"?i(r):i},"handle"),or=t(r=>(...e)=>f(r,e.slice(0,-1),e[e.length-1]),"match");var nr=t(r=>r,"otherwise");var sr=t(r=>e=>o(e,r),"is"),ar=t(r=>e=>e===r,"isStrictly"),fr=t(r=>e=>e==r,"isLosely"),pr=t(r=>e=>e!==r,"isNotStrictly"),cr=t(r=>e=>e!=r,"isNotLosely"),yr=t(r=>e=>e!=null&&e[r]!==void 0,"has"),xr=t(r=>e=>e!=null&&e.hasOwnProperty(r),"hasOwn"),lr=t((r,e,...i)=>n=>n!=null&&typeof n[r]=="function"&&o(n[r](...i),e),"callAndCheck");var ur=t(r=>e=>e>r,"gt"),mr=t(r=>e=>e<r,"lt"),gr=t(r=>e=>e>=r,"gte"),hr=t(r=>e=>e<=r,"lte"),dr=t((r,e)=>i=>i>r&&i<e,"inRange");var br=t(r=>{if(r.length===0)throw new TypeError("match: arguments length of (0)")},"checkargs"),vr=t(r=>e=>e?.length===r||e?.size===r,"ofLength"),Ar=t((r,e)=>i=>Array.isArray(i)&&i.includes(r,e),"includes"),Nr=t((...r)=>br(r)&&(e=>{if(!e)return!1;for(let i=0;i<r.length;i++)if(!o(e[i],r[i]))return!1;return!0}),"firstOf"),Sr=t((...r)=>br(r)&&(e=>{if(!e)return!1;for(let i=0;i<r.length;i++)if(!o(e[e.length-(r.length-i)],r[i]))return!1;return!0}),"lastOf"),Or=t(r=>e=>Array.isArray(e)&&e.length&&e.every(i=>o(i,r)),"every"),Ir=t(r=>e=>Array.isArray(e)&&e.length&&e.some(i=>o(i,r)),"some");var kr=t(r=>e=>typeof e=="string"&&e.startsWith(r),"startsWith"),Er=t(r=>e=>typeof e=="string"&&e.endsWith(r),"endsWith"),wr=t(r=>{if(typeof r!="string"&&!(r instanceof RegExp))throw new TypeError("match: matcher of type ("+r?.constructor?.name+"), expected (String) or (RegExp)");return typeof r=="string"?e=>e.includes(r):e=>r.test(e)},"matchString");var Br=t(r=>e=>!o(e,r),"not"),Pr=t((...r)=>e=>r.some(i=>o(e,i)),"anyOff"),jr=t((...r)=>e=>r.every(i=>o(e,i)),"allOff");var ne={match:or,handle:f,check:o,otherwise:nr,is:sr,isStrictly:ar,isLosely:fr,isNotStrictly:pr,isNotLosely:cr,has:yr,hasOwn:xr,callAndCheck:lr,not:Br,allOff:jr,anyOff:Pr,gt:ur,lt:mr,gte:gr,lte:hr,inRange:dr,ofLength:vr,includes:Ar,firstOf:Nr,lastOf:Sr,every:Or,some:Ir,startsWith:kr,endsWith:Er,matchString:wr,isOfType:p,isInstanceOf:c,isStringP:y,isString:x,isNumberP:l,isNumber:u,isBooleanP:m,isBoolean:g,isBigIntP:h,isBigInt:d,isSymbol:b,isPrimitive:v,isNull:A,isUndefined:N,isNill:S,isDefined:O,isTruthy:I,isFalsy:k,isTrue:E,isFalse:w,isObject:B,isPlainObject:P,isArray:j,isArrayLike:T,isSafeArrayLike:W,isArrayBuffer:F,isDataView:L,isBlob:R,isDate:D,isRegExp:U,isInteger:s,isNaN:M,isFinite:z,isSafeInteger:C,isFunction:V,isPromise:$,isConstructor:_,isError:G,isMap:X,isSet:q,isWeakMap:H,isWeakSet:J,isEmpty:K,isInt8:Q,isInt16:Y,isInt32:Z,isUint8:rr,isUint16:er,isUint32:tr,isNative:ir};export{jr as allOff,Pr as anyOff,lr as callAndCheck,o as check,ne as default,Er as endsWith,Or as every,Nr as firstOf,ur as gt,gr as gte,f as handle,yr as has,xr as hasOwn,dr as inRange,Ar as includes,sr as is,j as isArray,F as isArrayBuffer,T as isArrayLike,d as isBigInt,h as isBigIntP,R as isBlob,g as isBoolean,m as isBooleanP,_ as isConstructor,L as isDataView,D as isDate,O as isDefined,K as isEmpty,G as isError,w as isFalse,k as isFalsy,z as isFinite,V as isFunction,c as isInstanceOf,Y as isInt16,Z as isInt32,Q as isInt8,s as isInteger,fr as isLosely,X as isMap,M as isNaN,ir as isNative,S as isNill,cr as isNotLosely,pr as isNotStrictly,A as isNull,u as isNumber,l as isNumberP,B as isObject,p as isOfType,P as isPlainObject,v as isPrimitive,$ as isPromise,U as isRegExp,W as isSafeArrayLike,C as isSafeInteger,q as isSet,ar as isStrictly,x as isString,y as isStringP,b as isSymbol,E as isTrue,I as isTruthy,er as isUint16,tr as isUint32,rr as isUint8,N as isUndefined,H as isWeakMap,J as isWeakSet,Sr as lastOf,mr as lt,hr as lte,or as match,wr as matchString,Br as not,vr as ofLength,nr as otherwise,Ir as some,kr as startsWith};
