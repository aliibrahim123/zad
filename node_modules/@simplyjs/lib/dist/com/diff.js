var A=Object.defineProperty;var s=(f,o)=>A(f,"name",{value:o,configurable:!0});var l=s((f,o,a=3,m=5,u=t=>t)=>{if(!Array.isArray(f))throw new TypeError("dlff: old of type ("+f?.constructor?.type+") expected (Array)");if(!Array.isArray(o))throw new TypeError("dlff: new of type ("+o?.constructor?.type+") expected (Array)");for(var t=[],d=!1,y,h,r=o.length,c=f.length,i=0,n=0,e=0,p=0;i!==r&&n!==c;){if(e=0,d=!1,y=u(f[n]),h=u(o[i]),y===h){n++,i++;continue}for(;e!==a;){if(e++,n+e===c&&i+e===r){t.push({type:"change",ind:n+p,count:e,nind:i}),n=c,i=r,d=!0;break}if(n+e===c||i+e===r)break;if(u(f[n+e])===u(o[i+e])){t.push({type:"change",ind:n+p,count:e,nind:i}),n+=e,i+=e,d=!0;break}}if(!d){for(e=0;e!==m&&(e++,i+e!==r);)if(u(o[i+e])===y){t.push({type:"add",ind:n+p,count:e,nind:i}),i+=e,p+=e,d=!0;break}d||(t.push({type:"delete",ind:n+p,count:1}),p-=1,n++)}}return n!==c&&t.push({type:"delete",ind:n+p,count:c-n}),i!==r&&t.push({type:"add",ind:n+p,count:r-i,nind:i}),t},"simple");var b={simple:l};var E=b;export{b as $diff,E as default,l as simple};
