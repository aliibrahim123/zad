var ct=Object.defineProperty;var r=(e,t)=>ct(e,"name",{value:t,configurable:!0});var x=class extends Error{constructor(t){super(),this.name="assertion",this.message=t}};r(x,"AssertionError");var c=r((e,t="str")=>{if(typeof e!="string")throw new TypeError(`assert: ${t} of type (${e?.constructor?.name}), expected (String)`)},"checkstr"),d=r((e,t)=>{if(typeof e!="function")throw new TypeError(`assert: ${t} of type (${e?.constructor?.name}), expected (Function)`)},"checkfn"),u=r((e,t,o=!0)=>{if(typeof e!="number")throw new TypeError(`assert: ${t} of type (${e?.constructor?.name}), expected (Number)`);if(!Number.isInteger(e)||e<=(o?-1:0))throw new TypeError(`assert: ${t} is (${e}), expected positive integer`)},"checkpInt"),w=r((e,t)=>{throw new TypeError(`assert: ${t} of type (${e?.constructor?.name}), expected (String) or (Function)`)},"throwNotStrOrFun"),y=r((e,t)=>{if(typeof e!="string"&&!(e instanceof RegExp))throw new TypeError(`assert: ${t} of type (${e?.constructor?.name}), expected (String) or (RegExp)`)},"checkstrOrReg");var i=r((e,t)=>{if(c(t,"message"),!e)throw new x(t)},"assert"),g=r((e,t,o)=>{throw new x(`expected (${e}) to be equal to (${t}) at (${o.join(".")})`)},"throwNotEq"),$=r((e,t,o,s=!0,p=[])=>{if(typeof e!="object"||e===null)return Object.is(e,t)?!0:(s&&g(e,t,p),!1);if(e instanceof Date)return t instanceof Date&&Number(e)===Number(t)?!0:(s&&g(e,t,p),!1);if(e instanceof RegExp)return t instanceof RegExp&&String(e)===String(t)?!0:(s&&g(e,t,p),!1);if(e instanceof Error)return t instanceof Error&&e.message===t.message&&e.name===t.name?!0:(s&&g(e,t,p),!1);if(o&&Object.keys(e).length!==Object.keys(t).length){if(s)throw new x(`expected keys (${Object.keys(e).join(",")}) to be same as (${Object.keys(t).join(",")}) at (${p.join(".")})`);return!1}return Object.keys(t).every(f=>$(e[f],t[f],o,s,p.concat(f)))},"deepEqHandler");var n=r((e,t,o)=>{typeof e=="string"?i(typeof t===e,o||`value of type (${typeof t}), expected (${e})`):typeof e=="function"?i(t instanceof e,o||`value of type (${t?.constructor?.name}), expected (${e.name})`):w(e,"type")},"ofType"),a=r((e,t,o)=>{typeof e=="string"?i(typeof t!==e,o||`value of type (${typeof t}), expected not (${e})`):typeof e=="function"?i(!(t instanceof e),o||`value of type (${t?.constructor?.name}), expected not (${e.name})`):w(e,"type")},"notOfType");var m=r((e,t,o)=>i(Object.is(e,t),o||`expected (${e}) to be equal to (${t})`),"eq"),h=r((e,t,o)=>i(!Object.is(e,t),o||`expected value to not be equal to (${t})`),"notEq"),T=r((e,t,o=!1)=>$(e,t,o),"deepEq"),W=r((e,t,o=!1,s)=>i(!$(e,t,o,!1),s||`expected (${e}) to not be ${o?"strictly ":""}deeply equal to (${t})`),"notDeepEq");var q=r((e,t)=>n("string",e,t),"isString"),A=r((e,t)=>a("string",e,t),"isNotString"),D=r((e,t)=>n("number",e,t),"isNumber"),B=r((e,t)=>a("number",e,t),"isNotNumber"),P=r((e,t)=>n("boolean",e,t),"isBoolean"),R=r((e,t)=>a("boolean",e,t),"notBoolean"),H=r((e,t)=>n("bigint",e,t),"isBigint"),I=r((e,t)=>a("bigint",e,t),"isNotBigint"),z=r((e,t)=>n("symbol",e,t),"isSymbol"),K=r((e,t)=>a("symbol",e,t),"isNotSymbol"),M=r((e,t)=>n("function",e,t),"isFunction"),L=r((e,t)=>a("function",e,t),"isNotFunction"),U=r((e,t)=>i(typeof e=="object"&&e!==null,t||`value of type (${e===null?null:typeof e}), expected (object)`),"isObject"),C=r((e,t)=>i(typeof e=="object"&&e!==null,t||"value of type (object), expected not (object)"),"isNotObject"),G=r((e,t)=>n(Array,e,t),"isArray"),J=r((e,t)=>a(Array,e,t),"isNotArray"),Q=r((e,t)=>m(e,!0,t),"isTrue"),V=r((e,t)=>m(e,!1,t),"isFalse"),X=r((e,t)=>m(e,void 0,t),"isUndefined"),Y=r((e,t)=>h(e,void 0,t),"isDefined"),Z=r((e,t)=>m(e,null,t),"isNull"),_=r((e,t)=>h(e,null,t),"isNotNull"),ee=r((e,t)=>i(e===null||!(typeof e=="object"||typeof e=="function"),t||`value of type (${e?.constructor?.name}), expected primitive`),"isPrimitive"),te=r((e,t)=>i(e!==null&&(typeof e=="object"||typeof e=="function"),t||`expected (${e}) to not be primitive`),"isNotPrimitive"),re=r((e,t)=>i(!!e,t||`expected (${e}) to be truthy`),"isTruthy"),oe=r((e,t)=>i(!e,t||`expected (${e}) to be truthy`),"isFalsy"),ie=r((e,t)=>{i(e==null,t||`value of type (${e?.constructor?.name}), expected nill`)},"isNill"),l=r((e,t)=>{i(e!=null,t||`expected (${e}) to not be nill`)},"isNotNill"),ne=r((e,t)=>n(Date,e,t),"isDate"),se=r((e,t)=>a(Date,e,t),"isNotDate"),pe=r((e,t)=>n(RegExp,e,t),"isRegExp"),ae=r((e,t)=>a(RegExp,e,t),"isNotRegExp"),fe=r((e,t)=>n(Map,e,t),"isMap"),ce=r((e,t)=>a(Map,e,t),"isNotMap"),xe=r((e,t)=>n(Set,e,t),"isSet"),me=r((e,t)=>a(Set,e,t),"isNotSet"),$e=r((e,t)=>n(WeakMap,e,t),"isWeakMap"),de=r((e,t)=>a(WeakMap,e,t),"isNotWeakMap"),ye=r((e,t)=>n(WeakSet,e,t),"isWeakSet"),he=r((e,t)=>a(WeakSet,e,t),"isNotWeakSet"),le=r((e,t)=>n(Promise,e,t),"isPromise"),ve=r((e,t)=>a(Promise,e,t),"isNotPromise"),ge=r((e,t)=>n(Error,e,t),"isError"),Ne=r((e,t)=>a(Error,e,t),"isNotError"),be=r((e,t)=>n(ArrayBuffer,e,t),"isArrayBuffer"),ue=r((e,t)=>a(ArrayBuffer,e,t),"isNotArrayBuffer"),we=r((e,t)=>n(TypedArray,e,t),"isTypedArray"),Oe=r((e,t)=>a(TypedArray,e,t),"isNotTypedArray"),Ee=r((e,t)=>m(e,NaN,t),"isNaN"),je=r((e,t)=>h(e,NaN,t),"isNotNaN"),Se=r((e,t)=>i(Number.isInteger(e),t||`expected (${e}) to be integer`),"isInt"),ke=r((e,t)=>i(!Number.isInteger(e),t||`expected (${e}) to be float`),"isFloat"),Fe=r((e,t)=>i(Number.isFinite(e),t||`expected (${e}) to be finite`),"isFinite"),Te=r((e,t)=>i(!Number.isFinite(e),t||`expected (${e}) to be infinite`),"isInfinite"),We=r((e,t)=>i(Object.isFrozen(e),t||`expected (${e}) to be frozen`),"isFrozen"),qe=r((e,t)=>i(!Object.isFrozen(e),t||`expected (${e}) to not be frozen`),"isNotFrozen"),Ae=r((e,t)=>i(Object.isSealed(e),t||`expected (${e}) to be sealed`),"isSealed"),De=r((e,t)=>i(!Object.isSealed(e),t||`expected (${e}) to not be sealed`),"isNotSealed");var Be=r((e,...t)=>i(t.some(o=>o===e),`expected (${e}) to be one of (${t.join(", ")})`),"oneOf"),Pe=r((e,...t)=>i(!t.some(o=>o===e),`expected (${e}) to not be one of (${t.join(", ")})`),"notOneOf"),Re=r((e,t=!1,...o)=>i(o.some(s=>$(e,s,t,!1)),`expected (${e}) to be ${t?"strictly ":""}deeply one of (${o.join(", ")})`),"deeplyOneOf"),He=r((e,t=!1,...o)=>i(!o.some(s=>$(e,s,t,!1)),`expected (${e}) to not be ${t?"strictly ":""}deeply one of (${o.join(", ")})`),"notDeeplyOneOf");var v=r((e,t,o)=>{c(e,"prop"),i(t?.[e]!==void 0,o||`expected (${t}) to have (${e})`)},"have"),O=r((e,t,o)=>{c(e,"prop"),l(t),i(Object.hasOwn(t,e),o||`expected (${t}) to have own property (${e})`)},"haveOwn"),E=r((e,t,o)=>{c(e,"prop"),i(t?.[e]===void 0,o||`expected (${t}) to not have (${e})`)},"notHave"),j=r((e,t,o)=>{c(e,"prop"),l(t),i(!Object.hasOwn(t,e),o||`expected (${t}) to not have own property (${e})`)},"notHaveOwn"),Ie=r((e,...t)=>{t.forEach(o=>v(o,e))},"haveKeys"),ze=r((e,...t)=>{t.forEach(o=>E(o,e))},"notHaveKeys"),Ke=r((e,...t)=>{t.forEach(o=>O(o,e))},"haveOwnKeys"),Me=r((e,...t)=>{t.forEach(o=>j(o,e))},"notHaveOwnKeys");var Le=r((e,t,o,s)=>{c(e,"name"),v(e,o);var p=Object.getOwnPropertyDescriptor(o,e);"value"in t&&i(p.value===t.value,`value of (${e}) is (${p.value}), expected (${t.value})`),"configurable"in t&&i(p.configurable===t.configurable,`configurable of (${e}) is (${p.configurable}), expected (${t.configurable})`),"writable"in t&&i(p.writable===t.writable,`writable of (${e}) is (${p.writable}), expected (${t.writable})`),"enumerable"in t&&i(p.enumerable===t.enumerable,`enumerable of (${e}) is (${p.enumerable}), expected (${t.enumerable})`),"get"in t&&i(p.get===t.get,`getter of (${e}) is (${p.get}), expected (${t.get})`),"set"in t&&i(p.set===t.set,`setter of (${e}) is (${p.set}), expected (${t.set})`)},"ownPropertyDescriptor");var Ue=r((e,t,o)=>i(e>t,o||`expected (${e}) to be greater than (${t})`),"gt"),Ce=r((e,t,o)=>i(e<t,o||`expected (${e}) to be less than (${t})`),"lt"),Ge=r((e,t,o)=>i(e>=t,o||`expected (${e}) to be greater than or equal (${t})`),"gte"),Je=r((e,t,o)=>i(e<=t,o||`expected (${e}) to be less than or equal (${t})`),"lte"),Qe=r((e,t,o,s)=>i(o>e&&o<t,s||`expected (${o}) to be between (${e}) and (${t})`),"between"),Ve=r((e,t,o,s)=>i(o<e||o>t,s||`expected (${o}) to not be between (${e}) and (${t})`),"notBetween");var Xe=r((e,t,o)=>{c(e,"str"),n("string",t),i(t.startsWith(e),`expected (${t}) to start with (${e})`)},"startsWith"),Ye=r((e,t,o)=>{c(e,"str"),n("string",t),i(t.endsWith(e),`expected (${t}) to end with (${e})`)},"endsWith"),Ze=r((e,t,o)=>{y(e,"pattern"),n("string",t),i(t.match(e),`expected (${t}) to be matched with (${e})`)},"match"),_e=r((e,t,o)=>{c(e,"str"),n("string",t),i(!t.startsWith(e),`expected (${t}) to not start with (${e})`)},"notStartsWith"),et=r((e,t,o)=>{c(e,"str"),n("string",t),i(!t.endsWith(e),`expected (${t}) to not end with (${e})`)},"notEndsWith"),tt=r((e,t,o)=>{y(e,"pattern"),n("string",t),i(!t.match(e),`expected (${t}) to not be matched with (${e})`)},"notMatch");var rt=r((e,...t)=>{n(Array,e),i(t.every(o=>e.includes(o)),`expected ([${e}]) to include (${t.join(", ")})`)},"includes"),ot=r((e,...t)=>{n(Array,e),i(!t.some(o=>e.includes(o)),`expected ([${e}]) not to include (${t.join(", ")})`)},"notIncludes"),S=r((e,t,o)=>{u(e,"length"),i(t?.length===e,o||`(${t}) of length (${t?.length}), expected (${e})`)},"ofLength"),k=r((e,t,o)=>{u(e,"length"),i(t?.length!==e,o||`(${t}) of length (${t?.length}), expected not (${e})`)},"notOfLength"),it=r((e,t)=>S(0,e,t),"isEmpty"),nt=r((e,t)=>k(0,e,t),"isNotEmpty");var st=r((e,t=Error,o="",s,...p)=>{d(t,"type"),y(o,"message matcher"),n("function",e);var f;try{e(...p)}catch(b){f=b}var N=f?`, throwed (${f.name}: ${f.message})`:"";i(f&&f instanceof t&&f.message.match(o),`expected (${e.name}) to throw a (${t.name})${o?" of message ("+o+")":""}${N}`)},"throws"),pt=r((e,t=Error,o="",s,...p)=>{d(t,"type"),y(o,"message matcher"),n("function",e);var f;try{e(...p)}catch(b){f=b}var N=f?`, throwed (${f.name}: ${f.message})`:"";i(!(f&&f instanceof t&&f.message.match(o)),`expected (${e.name}) to not throw a (${t.name})${o?" of message ("+o+")":""}${N}`)},"notThrows");var at=r((e,t=()=>{},o)=>{d(t,"resolver"),n(Promise,e),e.then(t),e.catch(s=>{throw new x(o||`expected value to resolve, rejected with (${s?.name}: ${s?.message})`)})},"resolve"),ft=r((e,t=()=>{},o)=>{d(t,"rejecter"),n(Promise,e),e.then(s=>{throw new x(o||`expected value to reject, resolved with (${s})`)}),e.catch(t)},"reject");var F={assert:i,ofType:n,notOfType:a,eq:m,notEq:h,deepEq:T,notDeepEq:W,isString:q,isNotString:A,isNumber:D,isNotNumber:B,isBoolean:P,notBoolean:R,isBigint:H,isNotBigint:I,isSymbol:z,isNotSymbol:K,isFunction:M,isNotFunction:L,isObject:U,isNotObject:C,isArray:G,isNotArray:J,isTrue:Q,isFalse:V,isUndefined:X,isDefined:Y,isNull:Z,isNotNull:_,isPrimitive:ee,isNotPrimitive:te,isTruthy:re,isFalsy:oe,isNill:ie,isNotNill:l,isDate:ne,isNotDate:se,isRegExp:pe,isNotRegExp:ae,isMap:fe,isNotMap:ce,isSet:xe,isNotSet:me,isWeakMap:$e,isNotWeakMap:de,isWeakSet:ye,isNotWeakSet:he,isPromise:le,isNotPromise:ve,isError:ge,isNotError:Ne,isArrayBuffer:be,isNotArrayBuffer:ue,isTypedArray:we,isNotTypedArray:Oe,isNaN:Ee,isNotNaN:je,isInt:Se,isFloat:ke,isFinite:Fe,isInfinite:Te,isFrozen:We,isNotFrozen:qe,isSealed:Ae,isNotSealed:De,oneOf:Be,notOneOf:Pe,deeplyOneOf:Re,notDeeplyOneOf:He,have:v,haveOwn:O,notHave:E,notHaveOwn:j,haveKeys:Ie,haveOwnKeys:Ke,notHaveKeys:ze,notHaveOwnKeys:Me,ownPropertyDescriptor:Le,gt:Ue,lt:Ce,gte:Ge,lte:Je,between:Qe,notBetween:Ve,startsWith:Xe,endsWith:Ye,match:Ze,notStartsWith:_e,notEndsWith:et,notMatch:tt,ofLength:S,notOfLength:k,includes:rt,notIncludes:ot,isEmpty:it,isNotEmpty:nt,throws:st,notThrows:pt,reject:ft,resolve:at};globalThis.$assert=F;var kr=F;export{i as assert,Qe as between,T as deepEq,Re as deeplyOneOf,kr as default,Ye as endsWith,m as eq,Ue as gt,Ge as gte,v as have,Ie as haveKeys,O as haveOwn,Ke as haveOwnKeys,rt as includes,G as isArray,be as isArrayBuffer,H as isBigint,P as isBoolean,ne as isDate,Y as isDefined,it as isEmpty,ge as isError,V as isFalse,oe as isFalsy,Fe as isFinite,ke as isFloat,We as isFrozen,M as isFunction,Te as isInfinite,Se as isInt,fe as isMap,Ee as isNaN,ie as isNill,J as isNotArray,ue as isNotArrayBuffer,I as isNotBigint,se as isNotDate,nt as isNotEmpty,Ne as isNotError,qe as isNotFrozen,L as isNotFunction,ce as isNotMap,je as isNotNaN,l as isNotNill,_ as isNotNull,B as isNotNumber,C as isNotObject,te as isNotPrimitive,ve as isNotPromise,ae as isNotRegExp,De as isNotSealed,me as isNotSet,A as isNotString,K as isNotSymbol,Oe as isNotTypedArray,de as isNotWeakMap,he as isNotWeakSet,Z as isNull,D as isNumber,U as isObject,ee as isPrimitive,le as isPromise,pe as isRegExp,Ae as isSealed,xe as isSet,q as isString,z as isSymbol,Q as isTrue,re as isTruthy,we as isTypedArray,X as isUndefined,$e as isWeakMap,ye as isWeakSet,Ce as lt,Je as lte,Ze as match,Ve as notBetween,R as notBoolean,W as notDeepEq,He as notDeeplyOneOf,et as notEndsWith,h as notEq,E as notHave,ze as notHaveKeys,j as notHaveOwn,Me as notHaveOwnKeys,ot as notIncludes,tt as notMatch,k as notOfLength,a as notOfType,Pe as notOneOf,_e as notStartsWith,pt as notThrows,S as ofLength,n as ofType,Be as oneOf,Le as ownPropertyDescriptor,ft as reject,at as resolve,Xe as startsWith,st as throws};
