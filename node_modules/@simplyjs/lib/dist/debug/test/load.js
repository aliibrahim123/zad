var y=Object.defineProperty;var i=(e,r)=>y(e,"name",{value:r,configurable:!0});var n=i((e,r)=>{if(typeof e!="string")throw new TypeError(`test: ${r} of type (${e?.constructor?.name}), expected (String)`)},"checkstr");import{readdir as d}from"node:fs/promises";import{resolve as m}from"node:path/posix";var a=i(async(e="./")=>{n(e),e=m(e);var r=!1,o=[],t=[],p=await d(e,{withFileTypes:!0});p.forEach(c=>{var s=c.name;if(c.isDirectory())return t.push(s);if(s==="index.test.js")return r=!0;s.includes("test")&&o.push(s)}),r?import(e+"/index.test.js").then(()=>f(o,t,e)):f(o,t,e)},"load"),f=i((e,r,o)=>{e.forEach(t=>import(o+"/"+t)),r.forEach(t=>a(o+"/"+t))},"handleLoad");globalThis.$test&&($test.load=a);export{a as load};
