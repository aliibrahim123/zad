var s=Object.defineProperty;var n=(e,r)=>s(e,"name",{value:r,configurable:!0});var p=n((e,r)=>{if(!(e instanceof Node))throw new TypeError(`dom: ${r} of type (${e?.constructor?.name}), expected (Node)`)},"checknode"),a=n((e,r)=>{if(typeof e!="string")throw new TypeError(`dom: ${r} of type (${e?.constructor?.name}), expected (String)`)},"checkstr");var m=n((e,r)=>{if(!Array.isArray(e))throw new TypeError(`dom: ${r} of type (${e?.constructor?.name}), expected (Array)`)},"checkarr");var d=n(e=>(e.forEach((r,i)=>{if(!(r instanceof Node))throw new TypeError(`dom: element at index (${i}) of type (${r?.constructor?.name}), expected (Element)`)}),e),"checkEls"),y=/[a-z]/,l=n((e,r=document,i)=>{if(typeof e=="string"){if(e[0]?.match(y))return[u(e,r instanceof Node?[]:r,i)];if(e[0]==="<"){let t=document.createElement("div");return t.innerHTML=e,Array.from(t.children)}return p(r,"root"),Array.from(r.querySelectorAll(e))}if(e instanceof Element)return[e];if(Array.isArray(e))return d(e);if(e?.length!==void 0)return d(Array.from(e));throw new TypeError(`dom: a of type (${e?.constructor?.name}), expected (String) or (Element) or (ArrayLike)}`)},"$el"),u=n((e,r={},i=[])=>{a(e,"tag"),m(i,"children");var t=document.createElement(e);for(let c in r){let o=r[c];if(c==="text")t.innerText=o;else if(c==="classList")t.classList=Array.isArray(o)?o.join(" "):o;else if(c==="style")Object.assign(t.style,o);else if(c==="attr")for(let f in o)t.setAttribute(f,o[f]);else if(c==="events")for(let f in o)t.addEventListener(f,o[f]);else t[c]=o}return t.append(...i),t},"create"),w=n((e,r=document)=>(a(e,"query"),p(r,"root"),Array.from(r.querySelectorAll(e))),"query"),$=n(e=>{a(e,"string");var r=document.createElement("div");return r.innerHTML=e,r.children.length===1?r.children[0]:Array.from(r.children)},"construct"),A=l;export{$ as construct,u as create,A as default,w as query};
