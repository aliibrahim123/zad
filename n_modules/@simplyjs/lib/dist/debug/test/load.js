var f=Object.defineProperty;var i=(e,r)=>f(e,"name",{value:r,configurable:!0});var c=i((e,r)=>{if(typeof e!="string")throw new TypeError(`test: ${r} of type (${e?.constructor?.name}), expected (String)`)},"checkstr");import{readdir as m}from"node:fs/promises";import{resolve as l}from"node:path/posix";var n=i(async(e="./")=>{c(e),e=l(e);var r=!1,o=[],t=[],p=await m(e,{withFileTypes:!0});p.forEach(a=>{var s=a.name;if(a.isDirectory())return t.push(s);if(s==="index.test.js")return r=!0;s.includes("test")&&o.push(s)}),r&&await import(e+"/index.test.js"),await y(o,t,e)},"load"),y=i(async(e,r,o)=>{await Promise.all([Promise.all(e.map(t=>import(o+"/"+t))),Promise.all(r.map(t=>n(o+"/"+t)))])},"handleLoad");globalThis.$test&&($test.load=n);export{n as load};
