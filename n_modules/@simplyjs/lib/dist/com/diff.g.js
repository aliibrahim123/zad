var b=Object.defineProperty;var a=(p,o)=>b(p,"name",{value:o,configurable:!0});var h=a((p,o,m=3,x=5,c=n=>n)=>{if(!Array.isArray(p))throw new TypeError("dlff: old of type ("+p?.constructor?.type+") expected (Array)");if(!Array.isArray(o))throw new TypeError("dlff: new of type ("+o?.constructor?.type+") expected (Array)");for(var n=[],d=!1,y,l,r=o.length,u=p.length,i=0,t=0,e=0,f=0;i!==r&&t!==u;){if(e=0,d=!1,y=c(p[t]),l=c(o[i]),y===l){t++,i++;continue}for(;e!==m;){if(e++,t+e===u&&i+e===r){n.push({type:"change",ind:t+f,count:e,nind:i}),t=u,i=r,d=!0;break}if(t+e===u||i+e===r)break;if(c(p[t+e])===c(o[i+e])){n.push({type:"change",ind:t+f,count:e,nind:i}),t+=e,i+=e,d=!0;break}}if(!d){for(e=0;e!==x&&(e++,i+e!==r);)if(c(o[i+e])===y){n.push({type:"add",ind:t+f,count:e,nind:i}),i+=e,f+=e,d=!0;break}d||(n.push({type:"delete",ind:t+f,count:1}),f-=1,t++)}}return t!==u&&n.push({type:"delete",ind:t+f,count:u-t}),i!==r&&n.push({type:"add",ind:t+f,count:r-i,nind:i}),n},"simple");var s={simple:h};globalThis.$diff=s;var E=s;export{s as $diff,E as default,h as simple};
