var U=Object.defineProperty;var h=(t,e)=>U(t,"name",{value:e,configurable:!0});import{cacheName as D}from'./sw.js';const c=[];async function L(t,e){let i=!1;if(t.action==="query-status"?e.postMessage({type:"cache",action:"query-status",status:c.length===0?"idle":"processing",packs:c.length===0?void 0:c.map(n=>n.pack)}):t.action==="delete-all"?(c.length===0&&(i=!0),c.push({type:"delete-all",pack:""})):t.action==="delete"?(c.length===0&&(i=!0),c.push({type:"delete",pack:t.pack})):t.action==="download"&&(c.length===0&&(i=!0),c.push({type:"download",pack:t.pack})),!i)return;const o=await self.caches.open(D),f=await(await fetch("./internal/contentPacks/info.json")).json();for(;c.length;){const n=c[0],a=n.pack;if(n.type==="delete-all")for(const s of await o.keys())o.delete(s);else if(n.type==="delete")e.postMessage({type:"cache",action:"delete",status:"deleting",pack:a}),await p(250),await x(a),await p(500),e.postMessage({type:"cache",action:"delete",status:"finished",pack:a,nowIdle:c.length===1});else{const s=!!f[a].chunks;e.postMessage({type:"cache",action:"download",status:"started",pack:a,packType:s?"packed":"unpacked"}),await p(250),s?await M(a):await T(a),await p(500),e.postMessage({type:"cache",action:"download",status:"finished",pack:a,nowIdle:c.length===1})}c.shift()}async function T(n){const a=await(await fetch(`./internal/contentPacks/${n}.json`)).json();let s=1;for(const l of a){const d=await fetch(l,{headers:{accept:k(l)}});await o.put(l,d),e.postMessage({type:"cache",action:"download",status:"caching",pack:n,packType:"unpacked",processed:s++,fullCount:a.length})}}h(T,"cacheUnpacked");async function M(n){const a=f[n].chunks;for(let s=0;s<a;s++){const l=await(await fetch(`./internal/contentPacks/${n}_${s}.txt`)).arrayBuffer();e.postMessage({type:"cache",action:"download",status:"fetched",pack:n,packType:"packed",chunk:s+1,chunkCount:a}),await p(100);const d=new Uint8Array(l),v=new DataView(l),C=new TextDecoder,r=23+v.getUint32(19),u=JSON.parse(C.decode(d.slice(23,r))),P=Object.keys(u).length;let w=0;for(const g in u){w++;const[m,b]=u[g],j=d.slice(r+m,r+m+b);await o.put(g,new Response(j,{status:200,headers:{"Content-Type":k(g),"Content-Length":String(j.length),Date:new Date().toUTCString()}})),w%25===0&&(e.postMessage({type:"cache",action:"download",status:"caching",pack:n,packType:"packed",chunk:s+1,chunkCount:a,fileCount:P,processed:w}),await p(100))}e.postMessage({type:"cache",action:"download",status:"finished-chunk",pack:n,packType:"packed",chunk:s+1,chunkCount:a}),await p(100)}}h(M,"cachePacked");async function x(n){const a=await(await fetch(`./internal/contentPacks/${n}.json`)).json();for(const s of S(a,25))await Promise.all(s.map(l=>o.delete(l))),await p(100)}h(x,"handleDelete")}h(L,"handleCache");function p(t){return new Promise(e=>setTimeout(e,t))}h(p,"delay");function S(t,e){const i=[],o=Math.ceil(t.length/e);for(let f=0;f<o;f++)i.push(t.slice(f*e,(f+1)*e));return i}h(S,"chunk");function k(t){return E[t.split(".").at(-1)]||""}h(k,"pathToMine");const E={html:"text/html",css:"text/css",js:"text/javascript",ts:"text/javascript",json:"application/json",txt:"text/plain",ttf:"font/ttf",jpg:"image/jpeg",png:"image/png",svg:"image/svg+xml"},y="zad-cache-v1",N="zad-cache";self.addEventListener("activate",t=>{t.waitUntil((async()=>{for(const e of await self.caches.keys())e.startsWith(N)&&e!==y&&self.caches.delete(e);await self.caches.open(y),await self.clients.claim()})())});self.addEventListener("fetch",t=>{const e=t.request;new URL(e.url).origin!==self.location.origin||e.method!=="GET"||t.respondWith((async()=>{const o=await(await self.caches.open(y)).match(e);return o||(self.navigator.onLine?fetch(e,{headers:{accept:k(e.url)}}):new Response("no internet",{status:404}))})())});self.addEventListener("message",t=>{t.data.type==="cache"&&L(t.data,t.source)});export{y as cacheName};
